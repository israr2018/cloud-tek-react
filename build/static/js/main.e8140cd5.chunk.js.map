{"version":3,"sources":["components/CouponsTable.js","components/NewCouponForm.js","components/EditCouponForm.js","App.js","serviceWorker.js","index.js"],"names":["CouponsTable","props","setEditMode","deleteCoupon","coupons","edit","handleButtonClick","e","coupon","preventDefault","target","name","id","map","key","percent_off","onClick","className","NewCouponForm","addCoupon","INITIAL_VALUES","React","useState","setCoupon","handleInputChange","console","log","value","new_coupon","JSON","stringify","type","onChange","EditCouponForm","cancelEditMode","updateCoupon","currentCoupon","editCoupon","setEditCoupon","useEffect","App","remotebaseUrl","isLoading","setIsLoading","setEdit","setCoupons","setCurrentCoupon","getCoupons","axios","get","then","result","coupon_list","data","put","updatedCoupon","catch","post","err","delete","deltetedCoupon","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8140cd5.chunk.js","sourcesContent":["import React from 'react';\r\nconst CouponsTable=(props)=>{\r\n    const {setEditMode,deleteCoupon,edit,coupons}=props;\r\n//    const handleEdit=(user)=>{\r\n//     //e.preventDefault();\r\n//     setEditMode(true)\r\n//    };\r\n//    const handleDelete=(e,id)=>{\r\n//       console.log(\"\",e.target.name);\r\n//       // deleteUser(id);\r\n     \r\n//    }\r\nconst handleButtonClick=(e,coupon)=>{\r\n    e.preventDefault();\r\n    switch (e.target.name) {\r\n    case 'edit':\r\n        setEditMode(coupon);\r\n        break;\r\n    case 'delete':\r\n        deleteCoupon(coupon.id);\r\n        break;\r\n    \r\n    }\r\n}\r\n return (\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n            <th>\r\n                Name\r\n            </th>\r\n            <th>\r\n                Percent_Off\r\n            </th>\r\n            <th>\r\n                Edit\r\n            </th>\r\n            <th>\r\n                Delete\r\n            </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {\r\n                coupons.map(coupon=>(\r\n                    <tr key={coupon.id}>\r\n                        <td>{coupon.name}</td>\r\n                        <td>{coupon.percent_off}</td>\r\n                        <td>\r\n                        <button onClick={(e)=>{handleButtonClick(e,coupon)}} className='button muted-button' name='edit'>Edit\r\n                        </button>\r\n                        </td>\r\n                        <td> \r\n                        <button onClick={(e)=>{handleButtonClick(e,coupon)}} className='button muted-button' name='delete'>Delete\r\n                        </button></td>\r\n                    </tr>\r\n                ))\r\n            }\r\n        </tbody>\r\n    </table>);\r\n}\r\nexport default CouponsTable;","import React  from 'react';\r\n\r\nconst NewCouponForm =(props)=>{\r\n    const {addCoupon}=props;\r\n    const INITIAL_VALUES={\r\n       \r\n        name:\"\",\r\n        percent_off:null\r\n    };\r\n    const [coupon,setCoupon]=React.useState(INITIAL_VALUES);\r\n    const handleSubmit=(e)=>{\r\n        \r\n        e.preventDefault();\r\n         if(!coupon.name & !coupon.percent_off) return;\r\n        addCoupon(coupon);\r\n       \r\n        console.log(\"initial_values:\"+JSON.stringify(INITIAL_VALUES))\r\n        setCoupon(INITIAL_VALUES);\r\n    }\r\n    const handleInputChange=(e)=>{\r\n        // destructure the array and get name and value property\r\n        console.log(\"e.target:\"+e.target.name);\r\n       const {name,value}=e.target;\r\n       \r\n       //create a new object from coupon ,and update its properties\r\n       const new_coupon={...coupon,[name]:value};\r\n        \r\n       console.log(\"new_coupon:\"+JSON.stringify(new_coupon));\r\n       //set the new_use to user\r\n       setCoupon(new_coupon);\r\n      \r\n    }\r\nreturn (\r\n    \r\n    <form>\r\n        <h2>Add New Coupon</h2>\r\n        <p>\r\n        <label>Name:</label>\r\n        <input type='text' name='name' value={coupon.name} onChange={handleInputChange}></input>\r\n        </p>\r\n        <p>\r\n        <label>Percent Off:</label>\r\n        <input type='text' name='percent_off' value={coupon.percent_off} onChange={handleInputChange}></input>\r\n        </p>\r\n        <label>Duration:</label>\r\n        <label>\r\n        <input type=\"radio\"   name=\"duration\" value=\"once\" onChange={handleInputChange}/>\r\n        Once\r\n        </label>\r\n        <label>\r\n        <input type=\"radio\" name=\"duration\" value=\"repeating\" onChange={handleInputChange}/>\r\n            repeating\r\n        </label>\r\n        <label>\r\n        <input type=\"radio\" name=\"duration\" value=\"forever\" onChange={handleInputChange}/>\r\n            forever\r\n        </label>\r\n        <input type='submit' onClick={handleSubmit} value='Submit'/>\r\n    </form>\r\n);\r\n}\r\n\r\nexport default NewCouponForm;","import React,{useState,useEffect} from 'react'\r\n\r\nconst EditCouponForm= (props) =>{\r\n    \r\n    const {cancelEditMode,updateCoupon,currentCoupon}=props;\r\n    const [editCoupon,setEditCoupon]=React.useState(currentCoupon);\r\n    useEffect(()=>{\r\n        setEditCoupon(currentCoupon);\r\n    },[props])\r\n    const handleButtonClick=(e)=>{\r\n        console.log(\"handleButtonClick\")\r\n      e.preventDefault();\r\n     switch (e.target.name) {\r\n        \r\n         case \"submit\":\r\n            updateCoupon(editCoupon)\r\n             \r\n             break;\r\n        case \"cancel\":\r\n              console.log(\"cancel\");\r\n              cancelEditMode();\r\n            break;\r\n        case \"name\":\r\n                   setEditCoupon({...editCoupon,[e.target.name]:e.target.value});\r\n                   break;\r\n        case \"percent_off\":\r\n                    setEditCoupon({...editCoupon,[e.target.name]:e.target.value})\r\n        break;\r\n         \r\n     }\r\n    }\r\n    return (\r\n        \r\n         <form>\r\n            <h2>Edit Coupon</h2>\r\n            <label>Name:</label>\r\n            <input type='text' name='name' value={editCoupon.name} onChange={(e)=>{ handleButtonClick(e)}} />\r\n            <label>Percent_Off:</label>\r\n            <input type='text' name='percent_off' value={editCoupon.percent_off} onChange={(e)=>{ handleButtonClick(e)}}  />\r\n            <button onClick={(e)=>{handleButtonClick(e)}} name=\"submit\">Submit</button>\r\n            <button onClick={(e)=>{handleButtonClick(e)}} name=\"cancel\">Cancel</button>\r\n        </form>\r\n        );\r\n        \r\n}\r\n\r\nexport default EditCouponForm;","import React from 'react';\nimport axios from 'axios';\nimport CouponsTable from './components/CouponsTable';\nimport NewCouponForm from './components/NewCouponForm';\nimport EditCouponForm from './components/EditCouponForm';\n\nfunction App() {\n  const remotebaseUrl=\"https://cloud-tek-api.herokuapp.com/api/stripe/coupons\";\n  const localbaseUrl=\"http://localhost:8080/api/stripe/coupons/\";\n  const [isLoading,setIsLoading]=React.useState(true);\n  const [edit,setEdit]=React.useState(false);\n  // const [users,setUsers]=React.useState(users_data);\n   const [coupons,setCoupons]=React.useState([]);\n  const initCurrentCoupon={id:null,name:\"\"};\n  const [currentCoupon,setCurrentCoupon]=React.useState(initCurrentCoupon);\n  \n  React.useEffect(() => {\n    // axios.get('http://localhost:8080/api/stripe/coupons').then(result=>{\n     \n    //   const coupon_list=result.data.data.data;\n    //   console.log(\"coupon_list:\"+JSON.stringify(coupon_list));\n    //   console.log(\"length:\"+coupon_list.length);\n    //   setCouponCout(coupon_list.length);\n    //   setIsLoading(false);\n    //  setCoupons(coupon_list);\n     \n    // })\n    getCoupons();\n  }, [])\n const getCoupons=()=>{\n   setIsLoading(true);\n   axios.get(remotebaseUrl).then(result=>{\n    const coupon_list=result.data.data.data;\n    setCoupons(coupon_list);\n    setIsLoading(false);\n   })\n }\n  const addCoupon=(new_coupon)=>{\n  // new_user.id=users.length+1;\n   //setCoupons([...coupons,new_coupon]);\n  //  const payload={};\n  //  payload[\"metadata\"]=new_coupon;\n    console.log(\"new_coupon:\"+JSON.stringify(new_coupon));\n    axios.post(remotebaseUrl,new_coupon).then(coupon=>{\n    getCoupons();\n   }).catch(err=>{\n     console.log(\"err\"+err);\n   });\n  };\n  const cancelEditMode=()=>{\n    \n    setEdit(false);\n  };\n  const setEditMode=(coupon)=>{\n    setEdit(true)\n    console.log(\"currentCoupon\",coupon);\n   // setCurrentUser(user);\n    setCurrentCoupon(coupon);\n  };\n const deleteCoupon=(id)=>{\n  //  let _users=users.filter((user)=>(user.id!==id));\n  //  setUsers(_users);\n  axios.delete(remotebaseUrl+id).then((deltetedCoupon)=>{\n    getCoupons();\n   }).catch((err)=>{\n    getCoupons();\n     //console.log(\"err:\"+err);\n   });\n };\n const updateCoupon=(coupon)=>{\n   \n   axios.put(remotebaseUrl,coupon)\n   .then(updatedCoupon=>{\n    \n    getCoupons();\n    cancelEditMode();\n   })\n   .catch(e=>{\n     console.log(\"error in updating coupon\"+e);\n   });\n  \n }\n  return (\n    \n    <div className='container'>\n      <h1> Strip Coupons with React</h1>\n    <div className='flex-row'>\n      \n      <div className='flex-large'>\n      \n        {edit?\n        (\n        \n         <EditCouponForm cancelEditMode={cancelEditMode} updateCoupon={updateCoupon} currentCoupon={currentCoupon}/>\n        \n        )\n         :\n         (\n            \n              <NewCouponForm addCoupon={addCoupon}/>\n            \n         )\n        }\n\n      </div>\n      <div className=\"flex-large\">\n        <>\n          <h2>View users</h2>\n          {isLoading?(<div>Loading data</div>):\n         (\n           <CouponsTable   coupons={coupons} setEditMode={setEditMode} deleteCoupon={deleteCoupon} edit={edit} cancelEditMode={cancelEditMode}/>)\n         }\n           </>\n      </div>\n    </div>\n   \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}